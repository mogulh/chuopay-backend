# Generated by Django 5.2.5 on 2025-08-07 20:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receives_notifications', models.BooleanField(default=True)),
                ('receives_sms', models.BooleanField(default=True)),
                ('receives_email', models.BooleanField(default=False)),
                ('receives_push', models.BooleanField(default=True)),
                ('receives_in_app', models.BooleanField(default=True)),
                ('payment_reminders', models.BooleanField(default=True)),
                ('event_updates', models.BooleanField(default=True)),
                ('general_announcements', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('max_notifications_per_day', models.PositiveIntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
                'db_table': 'notification_settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('in_app', 'In-App')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField(help_text='Template content with placeholders like {student_name}, {event_name}, etc.')),
                ('variables', models.JSONField(blank=True, default=dict, help_text='Available variables for this template')),
                ('is_active', models.BooleanField(default=True)),
                ('max_length', models.PositiveIntegerField(blank=True, help_text='Maximum length for SMS', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'unique_together': {('name', 'template_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('schedule_type', models.CharField(choices=[('immediate', 'Immediate'), ('scheduled', 'Scheduled'), ('recurring', 'Recurring')], default='immediate', max_length=20)),
                ('scheduled_time', models.DateTimeField(blank=True, null=True)),
                ('recurring_type', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('recurring_interval', models.PositiveIntegerField(default=1, help_text='Every X days/weeks/months')),
                ('event_types', models.JSONField(blank=True, default=list)),
                ('payment_statuses', models.JSONField(blank=True, default=list)),
                ('days_before_due', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_schedules', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification Schedule',
                'verbose_name_plural': 'Notification Schedules',
                'db_table': 'notification_schedules',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('in_app', 'In-App')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('external_status', models.CharField(blank=True, max_length=50)),
                ('delivery_error', models.TextField(blank=True)),
                ('cost', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contributions.contributionevent')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contributions.student')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationschedule')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSCredits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(help_text='Number of SMS credits')),
                ('credit_type', models.CharField(choices=[('purchase', 'Purchase'), ('usage', 'Usage'), ('refund', 'Refund'), ('bonus', 'Bonus')], max_length=20)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SMS Credits',
                'verbose_name_plural': 'SMS Credits',
                'db_table': 'sms_credits',
                'ordering': ['-created_at'],
            },
        ),
    ]
