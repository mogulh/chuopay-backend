# Generated by Django 4.2.10 on 2025-08-30 11:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contributions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='auto', max_length=20)),
                ('language', models.CharField(default='en', help_text="Language code (e.g., 'en', 'sw')", max_length=10)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('dashboard_layout', models.JSONField(default=dict, help_text='Dashboard widget layout')),
                ('default_view', models.CharField(default='overview', help_text='Default dashboard view', max_length=50)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('school_only', 'School Only')], default='school_only', max_length=20)),
                ('default_payment_method', models.CharField(blank=True, help_text='Default payment method preference', max_length=50)),
                ('auto_pay_enabled', models.BooleanField(default=False, help_text='Enable automatic payments')),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('session_timeout', models.IntegerField(default=30, help_text='Session timeout in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
                'db_table': 'user_preferences',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Setting key (e.g., 'maintenance_mode')", max_length=100, unique=True)),
                ('value', models.TextField(help_text='Setting value')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('float', 'Float')], default='string', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of what this setting controls')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this setting can be read by non-admin users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_system_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'db_table': 'system_settings',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='FeatureFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Feature flag name', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Description of what this feature flag controls')),
                ('flag_type', models.CharField(choices=[('boolean', 'Boolean'), ('percentage', 'Percentage'), ('user_list', 'User List')], default='boolean', max_length=20)),
                ('is_enabled', models.BooleanField(default=False, help_text='Whether the feature is enabled')),
                ('percentage', models.IntegerField(default=0, help_text='Percentage of users who should see this feature (0-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enabled_users', models.ManyToManyField(blank=True, related_name='enabled_features', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feature Flag',
                'verbose_name_plural': 'Feature Flags',
                'db_table': 'feature_flags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Setting key', max_length=100)),
                ('value', models.TextField(help_text='Setting value')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('float', 'Float')], default='string', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='contributions.school')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'School Setting',
                'verbose_name_plural': 'School Settings',
                'db_table': 'school_settings',
                'ordering': ['school', 'key'],
                'unique_together': {('school', 'key')},
            },
        ),
        migrations.CreateModel(
            name='AppConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('general', 'General'), ('security', 'Security'), ('payment', 'Payment'), ('notification', 'Notification'), ('approval', 'Approval'), ('analytics', 'Analytics'), ('integration', 'Integration')], default='general', max_length=20)),
                ('key', models.CharField(help_text='Configuration key', max_length=100)),
                ('value', models.TextField(help_text='Configuration value')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('float', 'Float')], default='string', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False, help_text='Whether this configuration is required')),
                ('is_sensitive', models.BooleanField(default=False, help_text='Whether this contains sensitive data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'App Configuration',
                'verbose_name_plural': 'App Configurations',
                'db_table': 'app_configurations',
                'ordering': ['category', 'key'],
                'unique_together': {('category', 'key')},
            },
        ),
    ]
