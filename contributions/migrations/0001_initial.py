# Generated by Django 4.2.10 on 2025-08-30 11:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContributionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('field_trip', 'Field Trip'), ('fundraiser', 'Fundraiser'), ('uniform', 'Uniform'), ('textbook', 'Textbook'), ('activity', 'Activity'), ('exam', 'Exam'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('has_tiers', models.BooleanField(default=False)),
                ('participation_type', models.CharField(choices=[('mandatory', 'Mandatory'), ('optional', 'Optional')], default='mandatory', max_length=20)),
                ('requires_approval', models.BooleanField(default=True, help_text='Does this event require parent approval?')),
                ('requires_payment', models.BooleanField(default=True, help_text='Does this event require payment?')),
                ('approval_before_payment', models.BooleanField(default=True, help_text='Must approval come before payment?')),
                ('approval_deadline', models.DateTimeField(blank=True, help_text='When approval expires', null=True)),
                ('due_date', models.DateTimeField()),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contribution Event',
                'verbose_name_plural': 'Contribution Events',
                'db_table': 'contribution_events',
            },
        ),
        migrations.CreateModel(
            name='ContributionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiers', to='contributions.contributionevent')),
            ],
            options={
                'verbose_name': 'Contribution Tier',
                'verbose_name_plural': 'Contribution Tiers',
                'db_table': 'contribution_tiers',
                'unique_together': {('event', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('group_type', models.CharField(choices=[('class', 'Class'), ('club', 'Club'), ('sport', 'Sport'), ('activity', 'Activity'), ('other', 'Other')], default='class', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('max_students', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=13)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/')),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
                'db_table': 'schools',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=13)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True)),
                ('admission_date', models.DateField()),
                ('current_class', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_enrolled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(related_name='students', to='contributions.group')),
                ('parents', models.ManyToManyField(limit_choices_to={'role': 'parent'}, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='contributions.school')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('amount_required', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('mpesa', 'M-Pesa'), ('bank', 'Bank Transfer'), ('cash', 'Cash'), ('card', 'Card'), ('other', 'Other')], max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('confirmation_notes', models.TextField(blank=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['admin', 'teacher']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_contributions', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_contributions', to='contributions.contributionevent')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_contributions', to=settings.AUTH_USER_MODEL)),
                ('selected_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contributions.contributiontier')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='contributions.student')),
            ],
            options={
                'verbose_name': 'Student Contribution',
                'verbose_name_plural': 'Student Contributions',
                'db_table': 'student_contributions',
                'ordering': ['-created_at'],
                'unique_together': {('event', 'student')},
            },
        ),
        migrations.CreateModel(
            name='PaymentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('due_date', 'Due Date'), ('overdue', 'Overdue'), ('partial', 'Partial Payment'), ('custom', 'Custom')], max_length=20)),
                ('message', models.TextField()),
                ('scheduled_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('delivery_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='contributions.studentcontribution')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_reminders', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Reminder',
                'verbose_name_plural': 'Payment Reminders',
                'db_table': 'payment_reminders',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='contributions.school'),
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_groups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contributionevent',
            name='groups',
            field=models.ManyToManyField(related_name='contribution_events', to='contributions.group'),
        ),
        migrations.AddField(
            model_name='contributionevent',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_events', to='contributions.school'),
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('name', 'school')},
        ),
    ]
