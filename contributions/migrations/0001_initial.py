# Generated by Django 5.2.5 on 2025-08-07 20:50

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=13)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/')),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
                'db_table': 'schools',
            },
        ),
        migrations.CreateModel(
            name='ContributionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('field_trip', 'Field Trip'), ('fundraiser', 'Fundraiser'), ('uniform', 'Uniform'), ('textbook', 'Textbook'), ('activity', 'Activity'), ('exam', 'Exam'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('has_tiers', models.BooleanField(default=False)),
                ('participation_type', models.CharField(choices=[('mandatory', 'Mandatory'), ('optional', 'Optional')], default='mandatory', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contribution Event',
                'verbose_name_plural': 'Contribution Events',
                'db_table': 'contribution_events',
            },
        ),
        migrations.CreateModel(
            name='ContributionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiers', to='contributions.contributionevent')),
            ],
            options={
                'verbose_name': 'Contribution Tier',
                'verbose_name_plural': 'Contribution Tiers',
                'db_table': 'contribution_tiers',
                'unique_together': {('event', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('group_type', models.CharField(choices=[('class', 'Class'), ('club', 'Club'), ('sport', 'Sport'), ('activity', 'Activity'), ('other', 'Other')], default='class', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('max_students', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_groups', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='contributions.school')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'groups',
                'unique_together': {('name', 'school')},
            },
        ),
        migrations.AddField(
            model_name='contributionevent',
            name='groups',
            field=models.ManyToManyField(related_name='contribution_events', to='contributions.group'),
        ),
        migrations.AddField(
            model_name='contributionevent',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_events', to='contributions.school'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('student_id', models.CharField(help_text="School's internal student ID", max_length=50, unique=True)),
                ('admission_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=13)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('medical_conditions', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='contributions.school')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='ReminderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('in_app', 'In-App')], max_length=20)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_error', models.TextField(blank=True)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('external_status', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'teacher']}, on_delete=django.db.models.deletion.CASCADE, related_name='sent_reminders', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='contributions.contributionevent')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='contributions.student')),
            ],
            options={
                'verbose_name': 'Reminder Log',
                'verbose_name_plural': 'Reminder Logs',
                'db_table': 'reminder_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.CharField(help_text='Format: 2023-2024', max_length=9)),
                ('term', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contributions.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contributions.student')),
            ],
            options={
                'verbose_name': 'Student Group',
                'verbose_name_plural': 'Student Groups',
                'db_table': 'student_groups',
                'unique_together': {('student', 'group', 'academic_year')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='groups',
            field=models.ManyToManyField(related_name='students', through='contributions.StudentGroup', to='contributions.group'),
        ),
        migrations.CreateModel(
            name='StudentParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('guardian', 'Guardian'), ('grandparent', 'Grandparent'), ('sibling', 'Sibling'), ('other', 'Other')], max_length=20)),
                ('is_primary_contact', models.BooleanField(default=False)),
                ('is_emergency_contact', models.BooleanField(default=False)),
                ('receives_notifications', models.BooleanField(default=True)),
                ('receives_sms', models.BooleanField(default=True)),
                ('receives_email', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contributions.student')),
            ],
            options={
                'verbose_name': 'Student Parent',
                'verbose_name_plural': 'Student Parents',
                'db_table': 'student_parents',
                'unique_together': {('student', 'parent')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='parents',
            field=models.ManyToManyField(related_name='children', through='contributions.StudentParent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StudentContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_required', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_contributions', to='contributions.contributionevent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='contributions.student')),
                ('tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contributions.contributiontier')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_contributions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Contribution',
                'verbose_name_plural': 'Student Contributions',
                'db_table': 'student_contributions',
                'unique_together': {('student', 'event')},
            },
        ),
    ]
